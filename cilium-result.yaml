---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUHlicnp2anRzMStJMk5mS2ZVanI5VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TlRJMU1qQXlOVFF4V2hjTk1qY3dOVEkxTWpBeQpOVFF4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRE9PU2lCNVp0OGdsZXlSdld4TStBcGExM2RiKzBKL1Frb0lCMVc2aVpBRnJYQzVRaE4KY2tTNEFha3dKVnVMUXc5SGw3MjhUREJ0U2JCSkh1SHJVcXZLbmdML1BXSTBldDhkVTRwOWtNblpqaHF0cWx1QQpMbGpld2YxUncxOFFkc2t6WFRWK2RZTFFQcm9nYTNMdUJ0Yy9uWmlvMERBSCtUL0dQWDEzTDdwV0VrZ3NUMnRRCm5BRUlneDl1cEZLL3lCMTR2Z3ZoV0ZnbHIzMlJZYnA3aUZXMzBOZDY3THRVa1k0Mk1aTVcxWnlSRHcxM2Q2ZDgKdHhoYk1vS2hSN1NmeHVUSE81NWtYZk5NRTNVejlFSy80MWZJV0xoa1ZjZnhSZmxZekZGUFpFYWJFTkdNdHFUZwpmQU5OK3h1QXBRQy9Pb2owK2xpUU8vTzZJZitRQWdHWGVjZzlBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVViSkx5b1M2NTBIRzdrWDNVbFlXZjdhSHVGUFF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGNVhRbXFDUmd4M1dHTmZ5S3BXYVlBeWhwYmZoREswSTdFL1B4Wm5mQzlERmVpYTlndjhiRForCm9xUFhvSHJxbXE3aStleFFzN1dpRlV1dm5MdG1pN2hRUHcxKy9Tc3Rod3NpUTdFL2IzVTZ0YklKVFNUOHRLa2oKVG5IRjJmMmNGMXFpTnkrYzExTUFNUG9HNXRNSkh5cTJna1NPTzhXbU1oTkZNS1JlbnFiMVVLUFh2YitPakZ1Wgp6RFEyb1lhaTd4UnJOM2YxbThzQ1A5RkJmTEZXcVJCR01CMWNaRUpaYS8zRWxNYTJtUTA3bWVtQmswUGVvZEJRCjQ0VDlXTGhwcThJQ1lHNHFsWUs3K1VGZlVhWjNtZHczU0g0RjJFT0FSUVJFOVF4ekNmM0ZJS2JPVTV0SmQ1NU8KYk5VT1ZiUm5lYW0wSU9PUnVTZ3MrRVRENEFJZ1RYUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBemprb2dlV2JmSUpYc2tiMXNUUGdLV3RkM1cvdENmMEpLQ0FkVnVvbVFCYTF3dVVJClRYSkV1QUdwTUNWYmkwTVBSNWU5dkV3d2JVbXdTUjdoNjFLcnlwNEMvejFpTkhyZkhWT0tmWkRKMlk0YXJhcGIKZ0M1WTNzSDlVY05mRUhiSk0xMDFmbldDMEQ2NklHdHk3Z2JYUDUyWXFOQXdCL2sveGoxOWR5KzZWaEpJTEU5cgpVSndCQ0lNZmJxUlN2OGdkZUw0TDRWaFlKYTk5a1dHNmU0aFZ0OURYZXV5N1ZKR09OakdURnRXY2tROE5kM2VuCmZMY1lXektDb1VlMG44Ymt4enVlWkYzelRCTjFNL1JDditOWHlGaTRaRlhIOFVYNVdNeFJUMlJHbXhEUmpMYWsKNEh3RFRmc2JnS1VBdnpxSTlQcFlrRHZ6dWlIL2tBSUJsM25JUFFJREFRQUJBb0lCQUNtT0R3R04yUFVQOXNmdgowSlp5azVzRkRaY1BkTDVzaEtuWFB0SkN3STV0aFJiT3ZBdVBHUlhURDlxcHpIYVZmc0M0YlAxQ2hRZWdyNnNzClUrM3RiTHlaZHBVa00yUEwxcVc4TGMzN25SRC90NVNESFlrSXpkT2xWM3hnV0FtalJndlpubXZyRmY4TWhNai8KbmRzaytiN1I3TzhuZEdaRzdYanU3eGRUUU1NUzgwZlVtSDZoYjB5ajhkNmw4a0hGWG0zQ1ZEU3kxOU9RUUc3MgpBUWlPSlZIYWJGSWNBUE9ManlrZnU3WEQ1dklmQUZORExTMXJUZTc3ZldERi84dE83SEY0bHI0YUcxcDZjdEwvCjBrVVYzUGMrb1Yrc1MzWjByelVtdkkwaHAydysvSm0vN3ZHdThGSk1BMUhob2U0RWx1bGs5M2lCaWdta05EWkcKZzA0eEswRUNnWUVBOG80OHFpVlgzZU1oZ0RXNmZrcFlqRksvbDhLc0Q2ZTM1R3RIQUQxdEhOajAvR1pWWFZTSgpxRnBOUnNOL2pOVkRmU1NRN0laT2drM2wwUkMwdUFzTzdvczM5d3NEaWVCbnErc09ET2E5RnZ1Qjl3SjBQSVNuCi9MMUFNSzVJZURwOXNvNzJ0YU1zNHVlUzFwOTAya2lWc2hVczVwUDMxTWxhajdnTTh2RnQ3V1VDZ1lFQTJhZGgKYWNIUCs2TStobVhhQ0dxV1gwU2JseElYVVZMa1ZGak9zdnRTTTJkcG9wN2c1TkFqd3BDVkp1SVloTytFQmlRNwpSNXdHbG1Vejg0SUNOUjhUWXc0TkwrSnRwd1BqRENLb3hnNVc4cFE5L1JVcFAyR2FnUUxmQmliY3JXeXB2eGtjCmR6YldNN2p4VkUvdnJkRXpmdkdQeUtXc0szREJSbmRudjIxa3pma0NnWUJNN1NGK1VPT2lJclB3UnBvRURhNHgKcXRqSzE5bmNDVFJBUkdtN1FNQUhReVBIbk9qNzlhREcvUVMvS2FlZFVkSGFzYXNvNkp1anBmTDZNRk13ZjRsWAp6RjJPZ3phM0ZxMnFqNXpnS0puVjNTUmw0NmhidlRMTjdIT2NQTm9ORDNmb0ZvRldNQTgvVTNSMWp4THZXOC9tCkwrTVNxZUVTNGwxUGNXN2g2Z0lVSlFLQmdEMmFUMHIwalI1R3pPcVRKMHZjaHlUOXNSL29BZXVGajVTRDhqVGMKUng2L2RUbU95RTVhenRSQndjVllsdUlCUEpmVVoyYlVOVlVaM2NOZEY2emJWOHhnYk1FUjBFRkdLMXdDNzB2bgpRUnExZEhvT0pEZUpNNGF5UGxkcVptazdhU3ZxT3BGUFZ2OGFxRXRadUplMHIyT05rVW1VQW8vbEFQOGx5cHAyCnB1SlpBb0dCQU8vWEZaMk96MjkvZkVWQ0FocXgyRnpzMnRuUnJaQmhReS8wVkU0N3NOSlFGbmhHamlpM2xzbG0KRkxZS1NNYnl4bGRuMHMrK2JweTllQUU4QkcxMlBKUGIzMnc1ZktqRU9TdEo2SWs3YnRzSG9NNllzY2ZMTlAxQgpiTk5RM3pTa3BLMVVqRkprU2MydEZqSW5nQU1JODVNdFNOOGxFMFZueDlnVXNEWUxldDZrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUHlicnp2anRzMStJMk5mS2ZVanI5VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TlRJMU1qQXlOVFF4V2hjTk1qY3dOVEkxTWpBeQpOVFF4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRE9PU2lCNVp0OGdsZXlSdld4TStBcGExM2RiKzBKL1Frb0lCMVc2aVpBRnJYQzVRaE4KY2tTNEFha3dKVnVMUXc5SGw3MjhUREJ0U2JCSkh1SHJVcXZLbmdML1BXSTBldDhkVTRwOWtNblpqaHF0cWx1QQpMbGpld2YxUncxOFFkc2t6WFRWK2RZTFFQcm9nYTNMdUJ0Yy9uWmlvMERBSCtUL0dQWDEzTDdwV0VrZ3NUMnRRCm5BRUlneDl1cEZLL3lCMTR2Z3ZoV0ZnbHIzMlJZYnA3aUZXMzBOZDY3THRVa1k0Mk1aTVcxWnlSRHcxM2Q2ZDgKdHhoYk1vS2hSN1NmeHVUSE81NWtYZk5NRTNVejlFSy80MWZJV0xoa1ZjZnhSZmxZekZGUFpFYWJFTkdNdHFUZwpmQU5OK3h1QXBRQy9Pb2owK2xpUU8vTzZJZitRQWdHWGVjZzlBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVViSkx5b1M2NTBIRzdrWDNVbFlXZjdhSHVGUFF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGNVhRbXFDUmd4M1dHTmZ5S3BXYVlBeWhwYmZoREswSTdFL1B4Wm5mQzlERmVpYTlndjhiRForCm9xUFhvSHJxbXE3aStleFFzN1dpRlV1dm5MdG1pN2hRUHcxKy9Tc3Rod3NpUTdFL2IzVTZ0YklKVFNUOHRLa2oKVG5IRjJmMmNGMXFpTnkrYzExTUFNUG9HNXRNSkh5cTJna1NPTzhXbU1oTkZNS1JlbnFiMVVLUFh2YitPakZ1Wgp6RFEyb1lhaTd4UnJOM2YxbThzQ1A5RkJmTEZXcVJCR01CMWNaRUpaYS8zRWxNYTJtUTA3bWVtQmswUGVvZEJRCjQ0VDlXTGhwcThJQ1lHNHFsWUs3K1VGZlVhWjNtZHczU0g0RjJFT0FSUVJFOVF4ekNmM0ZJS2JPVTV0SmQ1NU8KYk5VT1ZiUm5lYW0wSU9PUnVTZ3MrRVRENEFJZ1RYUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQU5CdUFVamxsQjJRUWV3dWdGT3FMaFl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURVeU5USXdNalUwTVZvWERUSTNNRFV5TlRJdwpNalUwTVZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU0rV29seFFsWFRnNmx2dGtTYVIKSjJMeGNQQzZnTGVLdTJ2b2dKOENYcExXUzd6akcwblZmQXl4TE5yeUQ2NDI2SzRFK1FGSS9teE9nS0RBUE8zVgppRHBiTHZpZTJIeEZNOEk5M3UwTjYzVG0xU1VJUy84c2J0OEhWaU5IV1g0VERBL2c1bmFyVnE5eFplanNsTFpXClU5MkpzUCsxQWhVYi9GZ3RaTDNXV3EyblN1cFF6czJFK3FuUk52cU1OaVZCYnVNQkZCL3gvT3Q5N0Vtd3F2dDQKUW1tRjhXU2VlUFNoaE9ZNlJ2U3NzQVA2cGRKQkJSSWVWYmkreEJzKzBaZjRnWkxYTnhOMjY1bmx5S3htL1hXSApva2wzQXduOXNsSlFZU3lVQ2JSTW1NdklnK2Z4cS9qTkVyRDAvd3EyUDNuVGdTUi9Ia1ladGFTSHJaZTNmYzU0Cm5BTUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVWJKTHlvUzY1MEhHNwprWDNVbFlXZjdhSHVGUFF3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXBhREo0RnIzZWZOR2xraEVMZk01Mzk5ZG4rdmoKQ2JDTkhXWjQrSUlFa3o5Wm9RU0psZEpBUEQ5Q1B2N0VkNmFZeDRCRDZ0MDNnQXVvaFpuSGxsQUoxR2xJeFJ3QgpUVzRQUTRWQWgwZXRzaW1SNXFMTVV1emRSR0FIcTFjcnZDUWVHTmpjVWdsV0wwZ2hTYkZQSWRSMWNtcytoeGZvClZ0aisrS3l4b3luenh6d1BjaWZ3K05zeFpUZ2o4RFJoRDhIeU80ZjVlbUN5Nm1tTGtOYlAyWkRVNGdya3VockcKbWRTWFJ4cFc0KzVHNmF1ZG9FZTBjclhaTnVBbHRKOFRaMit6LzJKNE9WbUFCdk5BRzlienNMS3hUdWxwb3FiWQoxc2lVQVBYMzFVM0JxalFuOHRYU1g4Tk5jZm9QZkFaZnV3ZmkzeWlIZ0Y0dnpPLzJHcUJnMFRGK2x3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBejVhaVhGQ1ZkT0RxVysyUkpwRW5ZdkZ3OExxQXQ0cTdhK2lBbndKZWt0Wkx2T01iClNkVjhETEVzMnZJUHJqYm9yZ1Q1QVVqK2JFNkFvTUE4N2RXSU9sc3UrSjdZZkVVendqM2U3UTNyZE9iVkpRaEwKL3l4dTN3ZFdJMGRaZmhNTUQrRG1kcXRXcjNGbDZPeVV0bFpUM1ltdy83VUNGUnY4V0Mxa3ZkWmFyYWRLNmxETwp6WVQ2cWRFMitvdzJKVUZ1NHdFVUgvSDg2MzNzU2JDcSszaENhWVh4Wko1NDlLR0U1anBHOUt5d0EvcWwwa0VGCkVoNVZ1TDdFR3o3UmwvaUJrdGMzRTNicm1lWElyR2I5ZFllaVNYY0RDZjJ5VWxCaExKUUp0RXlZeThpRDUvR3IKK00wU3NQVC9DclkvZWRPQkpIOGVSaG0xcElldGw3ZDl6bmljQXdJREFRQUJBb0lCQVFDMU9uM3VlQSt5NVRUVgpJcmNvNDJwdVQvall3UW5rc3dKaTk2MXFwSWZxUzVuOWdvdnRUcXFvN2ZrS0FHKytHWVBUZ05YZTBGb0dOaGJICndHeXcrazJmSE1JS0hhdEQrcXB3TnRHclJRNjlsVlNacXYrbCs2V2pvbVVLRVoxSW10cFo5bTlkUk1JK0VwTDAKNGE0RzdhRHo5T1NJcVA3emJPWkdHUU10VkxqL2hreWg1NnJrY1pkM1VsdVQwZ2s4cTZHdFQ1bWppUlN0QWlqLwovOWRiWkNWeE1jaEdJZ3YyTWFVclRMbFFRb0k3Z2Q5QUVTdWI4eGFaUTBjQlh3ZWlXL1NZZ0Z5R2MxRmJ5UzJyCmlNVnIrWlljNEp4TFNxK2pyUk9oeUJGcG5OMkh5cEJid3M4NkNQZVRVWWUzWjdPWDlQV0RiMEhqS3EzblRxaDYKVjFxbkpOMDVBb0dCQVB2Znk2bng0SktTTzM2dUxWT1lDSjcrc0RjMFVFRlg3VUU4K3ZGb0pIY0hOZVFnait4Vgp5WjdMYk02TXRwbHNyY3pndVgwUFNGWnBkckVzR0puL1hwVjZzNmMwM3gxRGgwZGp2N3ltUUgrUHM4czNla1E2CmNDSHlQNnMwRUtxUGpPeTZMOFpOUW1EOHVEdnRPY3U2eC9icmdjZjFYWFNZVm5VaXM5RmE0Ry9kQW9HQkFOTDkKSWFtRFZyYmhvU0pxYkEvSjVRdlRkL3ltNU1ESjVMYmV3M0kyaVRYRHdqTUo2QitHbVQ0dGxoL1UrSDlxZ2NuKwp0Rm94ZEo2YW5lTG5VYXJsL0t2Zk0vYi82Z2d4MnlaQ1JvRWtuZnlrY1lyZ0sxRWtnUHlXWms1U3RmZkgxaXBQCjFWUk50OTV6WlFObUFrK3hoN0pVTlVZcE83YnhQc1k0OFVWSjVtMWZBb0dCQVBlWHhCVzM3a0ZHdkhOSDlzaVEKMEJDelhqZTJGaHBWdTZVQXM5R3d4UCs0dDlJYjdENnZDZll1RkRScWdHa0xPMElGdW5Ea0lBREp4V0plYllTYwpVcmJ3R2tBSXFqYVRGaDBvUWVmSktlZjdOQXRVNnJ5OUVWTmRWaGNPcEQ5MXcxdEZud2I1RllKUGl5OWxnQVgwCkF2T0lDRml1cXdLZGFZZlY2QnVwa0t5RkFvR0JBSXIrWXp5dTMyTmZSSzNOZWg3MG5FV3NMREZ2S09ld21WRzMKY3Y0ODJ5dG1LUHRDblg2WFIwRGsreTlCTit1SW1MUWZiV1MxaStRb2E3YmRPTG5qQlErYzNUanM0cG8vYmVYSQpaM1lRVDF2dVlUWmg4MmRqS3U0N2ptNHVvdDMyOGlteHFoSDltUkdjNTREVHBOWW5XQU9zNGVPMHFqZ2N1WVFRCll6R0lPNXIxQW9HQVdjWkQ4UEk4SW40OXpKRXBteDFYL21zbE03bDhSVE1MVUFTbGZBTU50NW00eVNEcVhhSUwKSW1UOUYxNlkrVDlGRlZnK0pyVEE4VktXbWVETm12ZXh5OFhKQUVuY2J1V1o1SXNWUCsvZHJOMkxNNjRBQ0czbwpjMkRWUG1WenVISTRMVkdkdzJMSUdmamF2K1l1WWM0RWx1M09TRzdtcy9RYm00T3R2KzFLWXMwPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9962"
  # A space-separated list of controller groups for which to enable metrics.
  # The special values of "all" and "none" are supported.
  controller-group-metrics:
    write-cni-file
    sync-host-ips
    sync-lb-maps-with-k8s-services
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  routing-mode: "tunnel"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-masquerade-to-route-source: "false"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "true"

  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  k8s-require-ipv4-pod-cidr: "true"
  k8s-require-ipv6-pod-cidr: "false"
  enable-endpoint-routes: "true"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  ipam-cilium-node-update-rate: "15s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-k8s-endpoint-slice: "true"
  enable-bgp-control-plane: "false"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"

  k8s-client-qps: "10"
  k8s-client-burst: "20"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-xff-num-trusted-hops-ingress: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"
  proxy-idle-timeout-seconds: "60"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: kube-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9964"
  labels:
    k8s-app: cilium
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.15.5@sha256:4ce1666a73815101ec9a4d360af6c5b7f1193ab00d89b7124f8505dee147ca40"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        resources:
          limits:
            cpu: 2
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 128Mi
        ports:
        - name: peer-service
          containerPort: 4244
          hostPort: 4244
          protocol: TCP
        - name: prometheus
          containerPort: 9962
          hostPort: 9962
          protocol: TCP
        - name: envoy-metrics
          containerPort: 9964
          hostPort: 9964
          protocol: TCP
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        # Check for duplicate mounts before mounting
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.15.5@sha256:4ce1666a73815101ec9a4d360af6c5b7f1193ab00d89b7124f8505dee147ca40"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.15.5@sha256:4ce1666a73815101ec9a4d360af6c5b7f1193ab00d89b7124f8505dee147ca40"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.15.5@sha256:4ce1666a73815101ec9a4d360af6c5b7f1193ab00d89b7124f8505dee147ca40"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          privileged: true
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "9ecfde368bf27489b466ab2a3a07e431811463fec13ffa46d04297d1015b5559"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.15.5@sha256:f5d3d19754074ca052be6aac5d1ffb1de1eb5f2d947222b5f10f6d97ad4383e8"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
